<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxQHEhQUERIWFRIVGRIVGRUYFRcdFRYXFRIXFxQUFBgY
        HCggGiYlHRYXITEhJTUrLi4uGCs/ODMtNygtLiv/2wBDAQoKCg4NDhcQEBcsJB4kLCwsLCwsLTUsLiws
        NCwsLCwsNystNywuLSwsLCwsLCwwNzc3NystLCwsNywuLCwsLCz/wAARCADCAQMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAbvGcZGeuO+PXFOrn7vT5E1OC4jTMbW88EzZX5
        dsiSQEgnJ5Mo4zjdXQUgM+31ZZ7mW22sHijhlJONrLKZANvOeDGc/WtCs5NJVLtroM29oUgK8bdqSO6t
        65y7CtGmBwnhLxvLrmqXtk8Uax2vm7WXdubZMEG7Jx0Nd3WRpvhi10u4luYYQs827zJNzktuYM3BJA5A
        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
</value>
  </data>
</root>